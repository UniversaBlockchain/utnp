group 'com.icodici'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext.targetJavaVersion = JavaVersion.current().isJava7() ? JavaVersion.VERSION_1_7 : JavaVersion.VERSION_1_8

configurations {
    if (targetJavaVersion.isJava7()) {
        checkerFrameworkJavac {
            description = 'a customization of the OpenJDK javac compiler with additional support for type annotations'
        }
    }
    checkerFrameworkAnnotatedJDK {
        description = 'a copy of JDK classes with Checker Framework type qualifers inserted'
    }
    checkerFramework {
        description = 'The Checker Framework: custom pluggable types for Java'
    }
}

dependencies {
    processResources

    // For log4j configuration
    compile group: "com.fasterxml.jackson.core", name: "jackson-core", version: '2.9.2'
    compile group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: '2.9.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.2'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.2'
    // Cryptography
    compile group: 'com.madgag.spongycastle', name: 'core', version: '1.58.0.0' // Cryptography
    // CLI support
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    // Logging
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'
    // Used transitively
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.10.0'
    // JSON
    compile group: 'org.json', name: 'json', version: '2017+'
    compile group: 'org.web3j', name: 'core', version: '3.3.1' // Ethereum support

    testCompile group: 'junit', name: 'junit', version: '4.12'

    // Checker framework
    ext.checkerFrameworkVersion = '2.2.0'
    ext.jdkVersion = JavaVersion.current().isJava7() ? 'jdk7' : 'jdk8'
    checkerFrameworkAnnotatedJDK "org.checkerframework:${jdkVersion}:${checkerFrameworkVersion}"
    if (targetJavaVersion.isJava7()) {
        checkerFrameworkJavac "org.checkerframework:compiler:${checkerFrameworkVersion}"
    }
    checkerFramework "org.checkerframework:checker:${checkerFrameworkVersion}"
    compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"
}

jar {
    manifest {
        attributes 'Main-Class': 'com.icodici.universa.utnp.BulkSendCLI'
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar with all dependencies',
                'Implementation-Version': version,
                'Main-Class': 'com.icodici.utnpconnector.Main'
    }
    baseName = project.name + '-all'
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
